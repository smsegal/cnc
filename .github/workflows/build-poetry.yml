# name: "Poetry Build"

# on:
#   push:
#     branches:
#       - main
#   pull_request:
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       fail-fast: false
#       matrix:
#         python-version: ["3.10"]

#     steps:
#       - uses: actions/checkout@v3
#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v3
#         with:
#           python-version: ${{ matrix.python-version }}
#       - name: Install Poetry
#         run: |
#           echo "${HOME}/.local/bin" >> $GITHUB_PATH
#           python -m pip install -U pip
#           python -m pip install --upgrade pipx
#           pipx install poetry==1.5.0
#       - name: Install dependencies
#         run: |
#           poetry install
#       #   - name: Lint with flake8
#       #     run: |
#       #       # stop the build if there are Python syntax errors or undefined names
#       #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#       #       # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#       #       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

#       - name: Test with pytest
#         run: |
#           pytest
name: Python CI

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      # - name: Configure Poetry
      #   run: |
      #     poetry config virtualenvs.create false

      - name: Install dependencies
        run: |
          poetry install

      - name: Run Pre-commit
        uses: pre-commit/action@v3.0.0

      - name: Run pytest
        run: |
          poetry run pytest
